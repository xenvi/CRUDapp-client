{"ast":null,"code":"import { LOADING_DATA, SET_EMPLOYEES, CREATE_EMPLOYEE, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from \"../types\";\nimport axios from \"axios\"; // get all employees\n\nexport const getEmployees = () => async dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n\n  try {\n    const res = await axios.get(\"/employee\");\n    dispatch({\n      type: SET_EMPLOYEES,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: SET_EMPLOYEES,\n      payload: []\n    });\n  }\n}; // create an employee\n\nexport const createEmployee = newEmployee => async dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n\n  try {\n    const res = await axios.post(\"/employee\", newEmployee);\n    dispatch({\n      type: CREATE_EMPLOYEE,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  } catch (e) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: e.response.data\n    });\n  }\n\n  ;\n}; // clear UI errors\n\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/tiffx/OneDrive/Desktop/Web Development/MainCoding/GrowflowPhoenix/growflow/src/redux/actions/dataActions.js"],"names":["LOADING_DATA","SET_EMPLOYEES","CREATE_EMPLOYEE","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","axios","getEmployees","dispatch","type","res","get","payload","data","e","createEmployee","newEmployee","post","clearErrors","response"],"mappings":"AAAA,SACIA,YADJ,EAEIC,aAFJ,EAGIC,eAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,UANJ,QAOS,UAPT;AAQA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;;AACA,MAAI;AACA,UAAMU,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,WAAV,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,aADD;AAELW,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAND,CAOA,OAAOC,CAAP,EAAU;AACNN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,aADD;AAELW,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;AACJ,CAfM,C,CAiBP;;AACA,OAAO,MAAMG,cAAc,GAAIC,WAAD,IAAiB,MAAOR,QAAP,IAAoB;AAC/DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;;AACA,MAAI;AACA,UAAMK,GAAG,GAAG,MAAMJ,KAAK,CAACW,IAAN,CAAW,WAAX,EAAwBD,WAAxB,CAAlB;AACAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,eADC;AAEPU,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACU,WAAW,EAAZ,CAAR;AACD,GAPH,CAQA,OAAOJ,CAAP,EAAU;AACNN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,UADD;AAELS,MAAAA,OAAO,EAAEE,CAAC,CAACK,QAAF,CAAWN;AAFf,KAAD,CAAR;AAIH;;AAAA;AACJ,CAhBM,C,CAkBP;;AACA,OAAO,MAAMK,WAAW,GAAG,MAAOV,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import {\r\n    LOADING_DATA,\r\n    SET_EMPLOYEES,\r\n    CREATE_EMPLOYEE,\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI\r\n  } from \"../types\";\r\nimport axios from \"axios\";\r\n  \r\n// get all employees\r\nexport const getEmployees = () => async (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    try {\r\n        const res = await axios.get(\"/employee\");\r\n        dispatch({\r\n            type: SET_EMPLOYEES,\r\n            payload: res.data,\r\n        });\r\n    }\r\n    catch (e) {\r\n        dispatch({\r\n            type: SET_EMPLOYEES,\r\n            payload: [],\r\n        });\r\n    }\r\n};\r\n\r\n// create an employee\r\nexport const createEmployee = (newEmployee) => async (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    try {\r\n        const res = await axios.post(\"/employee\", newEmployee);\r\n        dispatch({\r\n          type: CREATE_EMPLOYEE,\r\n          payload: res.data,\r\n        });\r\n        dispatch(clearErrors());\r\n      }\r\n    catch (e) {\r\n        dispatch({\r\n            type: SET_ERRORS,\r\n            payload: e.response.data,\r\n        });\r\n    };\r\n};\r\n\r\n// clear UI errors\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n};"]},"metadata":{},"sourceType":"module"}